#!/bin/bash -e

pidfile=$CLOUDWAY_MYSQL_DIR/run/mysql.pid

function is_running {
  if [ -f $pidfile ]; then
    mysql_pid=$(< $pidfile)
    myid=$(id -u)
    if $(ps --pid $mysql_pid > /dev/null 2>&1) || $(pgrep -x mysqld_safe -u $myid > /dev/null 2>&1); then
      return 0
    fi
  fi
  return 1
}

function start {
  if ! is_running; then
    echo "Starting MySQL $CLOUDWAY_MYSQL_VERSION"
    rm -f $CLOUDWAY_MYSQL_LOG_DIR/mysql*.log
    /usr/local/mysql/bin/mysqld_safe --defaults-file=$CLOUDWAY_MYSQL_DIR/conf/my.cnf --log-error=$CLOUDWAY_MYSQL_LOG_DIR/stdout.err > /dev/null 2>&1 &
    wait_for_start
    initdb
  else
    echo "MySQL already running"
  fi
}

function wait_for_start {
  for i in {1..20}; do
    if is_running; then
      return 0
    fi
    sleep 1
  done

  echo "MySQL server failed to start:"
  exit 1
}

function initdb {
  local hostname=$CLOUDWAY_MYSQL_DB_HOST
  local username=$CLOUDWAY_MYSQL_DB_USERNAME
  local password=$CLOUDWAY_MYSQL_DB_PASSWORD
  local socket=$CLOUDWAY_MYSQL_DB_SOCKET
  local dbname=$CLOUDWAY_APP_NAME

  local sql=$(
    # create default database
    if [[ "$dbname" != 'test' ]]; then
      echo "drop database if exists test;"
    fi
    echo "create database if not exists ${dbname} default character set utf8 default collate utf8_general_ci;"

    # grant local access permissions
    cat <<EOF
delete from user where user='$username' or user='root' or user='';
grant all on *.* to '$username'@'127.0.0.1' identified by '$password' with grant option;
grant all on *.* to '$username'@'::1' identified by '$password' with grant option;
grant all on *.* to '$username'@'localhost' identified by '$password' with grant option;
grant all on *.* to '$username'@'%' identified by '$password' with grant option;
EOF

    echo "flush privileges;"
  )

  echo "$sql" | /usr/local/mysql/bin/mysql -u $username --password=$password -S $socket mysql > /dev/null 2>&1 || \
  echo "$sql" | /usr/local/mysql/bin/mysql -u root -S $socket mysql > /dev/null 2>&1 || \
  echo "Failed to initialize database"
}

function stop {
  if is_running; then
    if [ -f $pidfile ]; then
      echo "Stopping MySQL ${CLOUDWAY_MYSQL_VERSION}"
      local pid=$(< $pidfile)
      if kill $pid; then
        local timeout=20
        while [[ $timeout > 0 && -f $pidfile ]]; do
          kill -0 "$pid" > /dev/null 2>&1 || break
          sleep 1
          (( timeout-= 1))
        done
      fi
    else
      if $(pgrep -x mysqld_safe > /dev/null 2>&1); then
        echo "Warning: MySQL process exists without a pid file." 1>&2
      else
        echo "MySQL already stopped" 1>&2
      fi
    fi
  fi
}

function status {
  if is_running; then
    echo "MySQL is running"
  else
    echo "MySQL is stopped"
  fi
  exit 0
}

function tidy {
  echo "Deleting mysql logs"
  shopt -s dotglob
  rm -rf $CLOUDWAY_MYSQL_LOG_DIR/mysql.log*
}

case "$1" in
  start)    start ;;
  stop)     stop ;;
  restart)  stop; start ;;
  status)   status ;;
  tidy)     tidy ;;
  *)        exit 0 ;;
esac

exit $?
