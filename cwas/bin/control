#!/bin/bash -e

PID_FILE="${CLOUDWAY_CWAS_DIR}/run/cwas.pid"
LISTEN="${CLOUDWAY_CWAS_HOST}:${CLOUDWAY_CWAS_PORT}"
AUTH="${CLOUDWAY_CWAS_ADMIN_USERNAME}:${CLOUDWAY_CWAS_ADMIN_PASSWORD}"

function isrunning {
  if [ -f $PID_FILE ]; then
    cwpid=$(< $PID_FILE)
    if /bin/ps --pid $cwpid 2>&1 > /dev/null; then
      return 0 # running
    fi
  fi
  return 1 # not running
}

function ishttpup {
  local count=0
  local ret=1

  while [ $count -lt 20 ]; do
    if /usr/bin/lsof -P -n -i "@${LISTEN}" | grep "(LISTEN)" > /dev/null; then
      let ret=0
      # Ensure all applications are running
      if curl -s -u "$AUTH" "http://${LISTEN}/cloudway/console/services.json" 2>/dev/null | grep 'com.cloudway.internal.deploy.service.J2EEDeployer' > /dev/null; then
        return 0
      fi
    fi
    let count=$count+1
    sleep 2
  done
  return $ret
}

function killtree() {
  local _pid=$1

  for _child in $(ps -o pid --ppid ${_pid} --no-headers); do
    killtree $_child
  done

  local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
  if [ -z "$should_be_gone_pid" ]; then
    return
  else
    kill -TERM ${_pid}
  fi

  local count=0
  while [ $count -lt 15 ]; do
    local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
    if [ -z "$should_be_gone_pid" ]; then
      return
    else
      sleep 0.5
      let count=${count}+1
    fi
  done

  local should_be_gone_pid=$(ps -o pid -p ${_pid} --no-headers)
  if [ -z "$should_be_gone_pid" ]; then
    kill -9 ${_pid}
  fi
}

function start {
  if isrunning; then
    echo "Application is already running"
  else
    ${CLOUDWAY_CWAS_DIR}/bin/run.sh 2>&1 | /usr/bin/rotatelogs ${CLOUDWAY_CWAS_LOG_DIR}/server.log.%Y%m%d 86400 &>/dev/null &
    if ! ishttpup; then
      echo "Timed out waiting for http listening port"
      exit 1
    fi
  fi
}

function stop {
  if ! isrunning; then
    echo "Application is already stopped"
  elif [ -f $PID_FILE ]; then
    cwpid=$(< $PID_FILE)
    killtree $cwpid
    rm -f $PID_FILE
  else
    echo "Failed to locate cloudway server pid file"
  fi
}

function reload {
  if ! isrunning; then
    echo "Application is already stopped"
  else
    # Invoke REST API to restart the deployment service to reload the application
    local url="http://${LISTEN}/cloudway/api/deploy"
    curl -s -u "$AUTH" -X POST "$url?action=reload" > /dev/null
  fi
}

function status {
  if isrunning; then
    echo "Application is running"
  else
    echo "Application is either stopped or inaccessible"
  fi
}

function tidy {
  rm -rf ${CLOUDWAY_CWAS_LOG_DIR}/*
}

case "$1" in
  start)    echo "Starting CWAS";     start ;;
  stop)     echo "Stopping CWAS";     stop ;;
  restart)  echo "Restarting CWAS";   reload ;;
  reload)   echo "Reloading CWAS";    reload ;;
  status)   status ;;
  tidy)     tidy ;;
  *)        exit 0
esac

exit $?
